/*
 * Copyright (c) 2019 David Aguiar Gonzalez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	repositories {
		maven { url 'https://maven.fabric.io/public' }
		mavenCentral()
	}

	dependencies {
		classpath Dependencies.fabric
	}
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
	maven { url 'https://maven.fabric.io/public' }
	mavenCentral()
}

// Needed to allow Parcelize
androidExtensions {
	experimental = true
}

android {

	compileSdkVersion SdkVersions.target

	defaultConfig {
		applicationId 'gc.david.dfm'
		minSdkVersion SdkVersions.min
		targetSdkVersion SdkVersions.target
		versionName AppVersions.name
		versionCode AppVersions.code
		resConfigs "en", "ca", "de", "es", "fr", "it", "pt"

		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation":"$projectDir/schemas".toString()]
			}
		}
	}

	buildTypes {
		debug {
			versionNameSuffix "-dev"

			// Uncomment this to test ProGuard before release
//			minifyEnabled true
//			shrinkResources true
//			proguardFiles getDefaultProguardFile('proguard-android.txt')
//			proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()

			if (System.getenv("TRAVIS")) {
				resValue "string", "maps_debug_api_key", "guess_it"
				resValue "string", "maps_release_api_key", "guess_it"
				resValue "string", "maps_geocode_api_key", "guess_it"
			}
		}
		release {
			minifyEnabled true
			shrinkResources true
			proguardFiles getDefaultProguardFile('proguard-android.txt')
			proguardFiles fileTree(dir: "proguard", include: ["*.pro"]).asList().toArray()
		}
		beta {
			initWith buildTypes.release

			versionNameSuffix "-beta"
		}
	}

	// Butterknife requires Java 8
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

dependencies {
	implementation Dependencies.materialComponents
	implementation Dependencies.preference
	implementation Dependencies.playServicesMaps
	implementation Dependencies.playServicesLocation
	implementation Dependencies.graphview
	implementation Dependencies.butterknife
	kapt Dependencies.butterknifeCompiler
	implementation Dependencies.crashlytics
	implementation Dependencies.dagger
	kapt Dependencies.daggerCompiler
	implementation Dependencies.okhttp
	implementation Dependencies.gson
	implementation Dependencies.constraintLayout
	debugImplementation Dependencies.leakCanary
	betaImplementation Dependencies.leakCanaryNoOp
	releaseImplementation Dependencies.leakCanaryNoOp
	implementation Dependencies.cardView
	implementation Dependencies.collectionKtx
	implementation Dependencies.coreKtx
    implementation Dependencies.roomRuntime
    implementation Dependencies.roomKtx
    kapt Dependencies.roomCompiler

    testImplementation TestDependencies.junit
	testImplementation TestDependencies.mockito
    testImplementation TestDependencies.mockitoInline
    testImplementation TestDependencies.mockitoKotlin
    testImplementation Dependencies.leakCanaryNoOp
}

